@page "/secure/units"
@attribute [Authorize(Roles = $"{Roles.MembershipChair},{Roles.Committee}")]
@rendermode InteractiveAuto

<h3>Units</h3>

<AutoQueryGrid Model="Unit" Apis="Apis.AutoQuery<QueryUnits, CreateUnit, UpdateUnit, DeleteUnit>()">
    <Columns>
        <Column Field="(Unit x) => x.DistrictId">
            <Header>District</Header>
            <Template>
                @context.District.Description
            </Template>
        </Column>
        <Column Field="(Unit x) => x.Sex" />
        <Column Field="(Unit x) => x.Type" />
        <Column Field="(Unit x) => x.Number" />
        <Column Field="(Unit x) => x.NotesLink" VisibleFrom="Breakpoint.Large">
            <Template>
                <TextLink onclick="() => OnNotesClicked(context)" href="/secure/units">
                    <div style="display: inline-flex; align-items: center;">
                        <Icon Image="typeof(UnitNote).GetIcon()" />
                        <div style="margin-left: 5px;">
                            @(context.NotesLink.Count) Notes
                        </div>
                    </div>
                </TextLink>
            </Template>
        </Column>
        <Column Field="(Unit x) => x.EventsLink" VisibleFrom="Breakpoint.ExtraLarge">
            <Template>
                <TextLink onclick="OnEventsClicked" href="/secure/units">
                    <div style="display: inline-flex; align-items: center;">
                        <Icon Image="typeof(EventUnit).GetIcon()" />
                        <div style="margin-left: 5px;">
                            @(context.EventsLink.Count) Events
                        </div>
                    </div>
                </TextLink>
            </Template>
        </Column>
        <Column Field="(Unit x) => x.SchoolsLink" VisibleFrom="Breakpoint.ExtraLarge2x">
            <Template>
                <TextLink onclick="OnSchoolsClicked" href="/secure/units">
                    <div style="display: inline-flex; align-items: center;">
                        <Icon Image="typeof(UnitSchool).GetIcon()" />
                        <div style="margin-left: 5px;">
                            @(context.SchoolsLink.Count) Schools
                        </div>
                    </div>
                </TextLink>
            </Template>
        </Column>
    </Columns>
</AutoQueryGrid>

<ManyToManySlideover
    Title="Unit Notes"
    @bind-IsOpen="isNotesOpen"
    ConfigureQueryCallback="ConfigureNotesQuery"
    TModel="Note"
    TRelationshipModel="UnitNote"
    TCreateModel="CreateNote"
    TCreateRelationshipModel="CreateUnitNote"
    TUpdateModel="UpdateNote"
    TDeleteModel="DeleteNote"
    TQueryModel="QueryNotes">
    <Columns>
        <Column Field="(Note x) => x.Description" />
    </Columns>
</ManyToManySlideover>

@* <ManyToManySlideover TModel="typeof(Note)" TRelationshipModel="typeof(UnitNote)" TCreateModel="typeof(CreateNote)" TCreateRelationshipModel="typeof(CreateUnitNote)" TQueryModel="typeof(QueryUnits)" TUpdateModel="typeof(UpdateNote)" TDeleteModel="typeof(DeleteNote)" 
    @bind-IsOpen="@isNotesOpen"
    Title="Unit Notes"
    ConfigureQueryCallback="ConfigureNotesQuery" /> *@
@* <MMSlideover @bind-IsOpen="isNotesOpen" Title="Unit Notes">
    <div style="margin: 20px;">
        <AutoQueryGrid Model="Note" Apis="Apis.AutoQuery<QueryNotes, CreateNote, UpdateNote, DeleteNote>()" ConfigureQuery="ConfigureNotesQuery" >
            <Columns>
                <Column Field="(Note x) => x.Description" />
            </Columns>
            <CreateForm>
                <form>
                    <AutoFormFields Type="typeof(Note)" Api="EditNoteApi" ModelDictionary="(new Note()).ToModelDictionary()" />
                    <AutoFormFields Type="typeof(UnitNote)" Api="EditUnitNoteApi" ModelDictionary="(new UnitNote()).ToModelDictionary()" />
                    <button type="submit">Create</button>
                </form>
            </CreateForm>
        </AutoQueryGrid>
    </div>
</MMSlideover> *@

<MMSlideover @bind-IsOpen="isEventsOpen" Title="Unit Events">
    <p>
        Todo: UI with a list of events for the unit and the option to create a new event
    </p>
</MMSlideover>

<MMSlideover @bind-IsOpen="isSchoolsOpen" Title="Unit Schools">
    <p>
        Todo: UI with a list of schools for the unit and the option to create a new school
    </p>
</MMSlideover>
